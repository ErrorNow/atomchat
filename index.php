<?php
/**
 * PHP Version 5 and above
 *
 * Main script
 *
 * @category  PHP_Chat
 * @package   PHP_Atomchat
 * @author    P H Claus <phhpro@gmail.com>
 * @copyright 2015 - 2019 P H Claus
 * @license   https://www.gnu.org/licenses/gpl-3.0.en.html GPLv3
 * @version   GIT: Latest
 * @link      https://github.com/phhpro/atomchat
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 */


$ver  = "20190309";

/**
 ***********************************************************************
 *                                                            FIRSTRUN *
 ***********************************************************************
 */

if (isset($run) && $run < 1) {
    echo "FATAL: Cannot write config! Script halted.";
}

/**
 ***********************************************************************
 *                                                              CONGIG *
 ***********************************************************************
 */

$conf_dat = "./conf.php";
$conf_txt = "<?php\n" .
            "//** Generated by Atomchat v$ver " . date('c') . "\n" .
            "\$css_dir=\"css\";\n" .
            "\$date=date('Y-m-d H:i');" .
            "\$dir=str_replace(DIRECTORY_SEPARATOR," .
            "'',basename(getcwd()));\n" .
            "\$emo_dat=\"emo.dat\";\n" .
            "\$lang_dir=\"lang\";\n" .
            "\$log=\"atomchat\";\n" .
            "\$log_dir=\"log\";\n" .
            "\$out=15;\n" .
            "\$up_dir=\"upload\";\n";

if (!is_file($conf_dat)) {
    $conf_txt .= "\$char=1024;\n" .
                 "\$css=1;\n" .
                 "\$css_def=\"light\";\n" .
                 "\$emo=1;\n" .
                 "\$lang_def=\"en\";\n" .
                 "\$log_end=0;\n" .
                 "\$log_max=100000;\n" .
                 "\$log_set=0;\n" .
                 "\$meta_d=\"PHP Atomchat Demo\";\n" .
                 "\$meta_k=\"PHP Atomchat Demo\";\n" .
                 "\$page=\"PHP Atomchat\";\n" .
                 "\$rate=2000;\n" .
                 "\$rm=1;\n" .
                 "\$rm_max=30;\n" .
                 "\$rn_max=900;\n" .
                 "\$rn_min=100;\n" .
                 "\$su_pfx=\"atom\";\n" .
                 "\$su_sfx=\"chat\";\n" .
                 "\$tn=100;\n" .
                 "\$type=array('7z','aif','aiff','au','avi','bmp'," .
                 "'bz','bz2','doc','docx','gz','m4a','m4v','mid'," .
                 "'mov','mp3','mp4','mpeg','mpg','odt','oga','ogg'," .
                 "'ogv','pdf','qt','rar','svg','tgz','txt','wav'," .
                 "'xz','z','zip');\n" .
                 "\$up=1;\n" .
                 "\$up_max=500000;\n";

    file_put_contents($conf_dat, $conf_txt);
    $run ++;
    header("Location: #WELCOME");
    exit;
}

/**
 ***********************************************************************
 *                                                        DEPENDENCIES *
 ***********************************************************************
 */

include $conf_dat;

if (!is_dir($lang_dir)) {
    $exit = "Missing language folder!";
} elseif (!is_dir($log_dir) && mkdir($log_dir) === false) {
    $exit = "Cannot create log folder!";
} elseif ($up === 1 && !is_dir($up_dir) && mkdir($up_dir) === false) {
    $exit = "Cannot create upload folder!";
} else {

    if ($emo === 1 && is_file($emo_dat)) {
        $emo_larr = array();
    } else {
        $exit = "Missing emoji definition!";
    }
}

if (isset($exit) && !empty($exit)) {
    echo "$exit Script halted.";
    exit;
}

//** Prevent "Headers already sent" warning
ob_start();

/**
 ***********************************************************************
 *                                                             HEADERS *
 ***********************************************************************
 */

header('Expires: on, 01 Jan 1970 00:00:00 GMT');
header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');
header('Cache-Control: no-cache');
header('Pragma: no-cache');
header_remove('X-Powered-By');

/**
 ***********************************************************************
 *                                                              BASICS *
 ***********************************************************************
 */

$log_init  = "<div class=\"item_log\">LOG INIT $date</div>\n";
$cook_time = time() + (86400 * 30);
$cr_dat    = "credits.dat";
$cr_ln     = array();
$su        = $su_pfx . $su_sfx;
$lang_ls   = glob("$lang_dir/*.php");
$css_ls    = glob("$css_dir/*.css");
sort($lang_ls);
sort($css_ls);
sort($type);

/**
 ***********************************************************************
 *                                                           FUNCTIONS *
 ***********************************************************************
 */

if (get_cfg_var('session.use_strict_mode') !== 1) {
    ini_set('session.use_strict_mode', 1);
}

/**
 * Function sessionstat()
 *
 * @return bool session status
 */
function sessionstat()
{
    if (php_sapi_name() !== 'cli'
        && version_compare(phpversion(), '5.4.0', '>=')
    ) {
        return session_status()
            === PHP_SESSION_ACTIVE ? true : false;
    } else {
        return session_id() === '' ? false : true;
    }

    return false;
}

if (sessionstat() === false && !session_start()) {
    echo "Cannot create session! Script halted.";
    exit;
} else {
    session_start();
}

/**
 * Function b64enc()
 *
 * @param string $b64_src source
 *
 * @return string data blob
 */
function b64enc($b64_src)
{
    $b64_ext = pathinfo($b64_src, PATHINFO_EXTENSION);
    $b64_get = file_get_contents($b64_src);
    $b64_str = "\"\ndata:image/" . $b64_ext .
               ";base64," . base64_encode($b64_get) . "\" ";
    return $b64_str;
}

//** Base64 types
$b64_type  = array(
    "gif",
    "jpeg",
    "jpg",
    "png"
);

/**
 * Function go()
 *
 * @param string $tag target
 *
 * @return string hashtag reference
 */
function go($tag)
{
    global $host;
    header("Location: $host#$tag");
    exit;
}

/**
 ***********************************************************************
 *                                                                 URL *
 ***********************************************************************
 */

$prot = "";

if (isset($_SERVER['HTTPS']) && 'on' === $_SERVER['HTTPS']) {
    $prot = "s";
}

$host = "http$prot://" . $_SERVER['HTTP_HOST'] . "/$dir/";

/**
 ***********************************************************************
 *                                                                 LOG *
 ***********************************************************************
 */

if ($log_end === 0) {
    $log = $log . "_" . date('Y-m-d');
}

$log_dat = "./" .$log_dir . "/" . $log . ".html";

if (is_file($log_dat) && $log_set === 1) {

    if ($log_max - filesize($log_dat) <= 0) {
        unlink($log_dat);
        file_put_contents($log_dat, $log_init);
    }
}

/**
 ***********************************************************************
 *                                                            LANGUAGE *
 ***********************************************************************
 */

$lang_mime = $lang_def;

if (isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {
    $lang_hal = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
    $lang_usr = $lang_hal;

    foreach ($lang_ls as $item) {
        $item = str_replace("$lang_dir/", "", $item);
        $item = str_replace(".php", "", $item);

        if (strpos($item, $lang_usr) === false) {
            continue;
        } else {
            $lang_id = $lang_usr;
        }
    }

    unset($item);
}

if (isset($_POST['lang_apply'])) {
    $lang_id = htmlentities($_POST['lang_id'], ENT_QUOTES, 'UTF-8');

    if (isset($_COOKIE['ac_lang'])) {
        setcookie('ac_lang', $lang_id, $cook_time, '/');
        $_COOKIE['ac_lang']  = $lang_id;
        $lang_id             = $_COOKIE['ac_lang'];
    } else {
        $_SESSION['ac_lang'] = $lang_id;
        $lang_id             = $_SESSION['ac_lang'];
    }
} else {

    if (isset($_COOKIE['ac_lang'])) {
        $lang_id = $_COOKIE['ac_lang'];
    } elseif (isset($_SESSION['ac_lang'])) {
        $lang_id = $_SESSION['ac_lang'];
    } else {
        $lang_id = $lang_def;
    }
}

$lang_dat = "./" . $lang_dir . "/" . $lang_id . ".php";

if (is_file($lang_dat)) {
    include $lang_dat;
} else {
    //** File removed -- try default
    if (isset($_COOKIE['ac_lang'])) {
        setcookie('ac_lang', $lang_def, $cook_time, '/');
        $lang_def            = $_COOKIE['ac_lang'];
        $_COOKIE['ac_lang']  = $lang_def;
    } else {
        $_SESSION['ac_lang'] = $lang_def;
        $lang_def            = $_SESSION['ac_lang'];
    }

    include "./" . $lang_dir . "/" . $lang_def . ".php";

    echo "<p>The requested file is no longer available!</p>\n" .
         "<p><a href=\"$host\" title=\"Click here to try default " .
         "settings\">Click here to try default settings.</a></p>\n" .
         "<p>If that fails, and you know how to contact the site " .
         "owner, now would be a good moment.</p>";
    exit;
}

/**
 ***********************************************************************
 *                                                                 CSS *
 ***********************************************************************
 */

if (isset($_POST['css_apply'])) {
    $css_id = htmlentities($_POST['css_id'], ENT_QUOTES, 'UTF-8');

    if (isset($_COOKIE['ac_css'])) {
        setcookie('ac_css', $css_id, $cook_time, '/');
        $_COOKIE['ac_css']  = $css_id;
        $css_id             = $_COOKIE['ac_css'];
    } else {
        $_SESSION['ac_css'] = $css_id;
        $css_id             = $_SESSION['ac_css'];
    }
} else {

    if (isset($_COOKIE['ac_css'])) {
        $css_id = $_COOKIE['ac_css'];
    } elseif (isset($_SESSION['ac_css'])) {
        $css_id = $_SESSION['ac_css'];
    } else {
        $css_id = $css_def;
    }
}

$css_dat = $css_dir . "/" . $css_id . ".css";

/**
 ***********************************************************************
 *                                                            SAVE LOG *
 ***********************************************************************
 */

if (isset($_POST['save'])) {
    $log_sfx = "_" . date('Hi') . ".html";
    $log_tmp = str_replace("./$log_dir/", "", $log_dat);
    $log_tmp = str_replace(".html", $log_sfx, $log_tmp);
    copy($log_dat, $log_tmp);
    $data = "<!DOCTYPE html>\n" .
            "<html lang=\"$lang_mime\">\n" .
            "    <head>\n" .
            "        <title>$log_fix</title>\n" .
            "        <meta charset=\"UTF-8\"/>\n" .
            "        <meta name=\"language\" " .
            "content=\"$lang_mime\"/>\n" .
            "        <meta name=\"viewport\" " .
            "content=\"width=device-width, " .
            "height=device-height, initial-scale=1\"/>\n" .
            "    </head>\n" .
            "    <body>\n" .
    file_get_contents($log_tmp) .
            "    </body>\n" .
            "</html>\n";
    file_put_contents($log_tmp, $data);
    header('Content-type: text/html');
    header(
        'Content-Disposition: attachment; filename="' . $log_tmp . '"'
    );
    readfile($log_tmp);
    unlink($log_tmp);
    exit;
}

/**
 ***********************************************************************
 *                                                          SUPER USER *
 ***********************************************************************
 */

if (isset($_POST['update'])) {
    $page_new
        = htmlentities($_POST['page'], ENT_QUOTES, 'UTF-8');
    $meta_d_new
        = htmlentities($_POST['meta_d'], ENT_QUOTES, 'UTF-8');
    $meta_k_new
        = htmlentities($_POST['meta_k'], ENT_QUOTES, 'UTF-8');
    $lang_def_new
        = htmlentities($_POST['lang_def'], ENT_QUOTES, 'UTF-8');
    $css_new
        = htmlentities($_POST['css'], ENT_QUOTES, 'UTF-8');
    $css_def_new
        = htmlentities($_POST['css_def'], ENT_QUOTES, 'UTF-8');
    $emo_new
        = htmlentities($_POST['emo'], ENT_QUOTES, 'UTF-8');
    $char_new
        = htmlentities($_POST['char'], ENT_QUOTES, 'UTF-8');
    $rate_new
        = htmlentities($_POST['rate'], ENT_QUOTES, 'UTF-8');
    $rn_max_new
        = htmlentities($_POST['rn_max'], ENT_QUOTES, 'UTF-8');
    $rn_min_new
        = htmlentities($_POST['rn_min'], ENT_QUOTES, 'UTF-8');
    $log_end_new
        = htmlentities($_POST['log_end'], ENT_QUOTES, 'UTF-8');
    $log_max_new
        = htmlentities($_POST['log_max'], ENT_QUOTES, 'UTF-8');
    $log_set_new
        = htmlentities($_POST['log_set'], ENT_QUOTES, 'UTF-8');
    $su_pfx_new
        = htmlentities($_POST['su_pfx'], ENT_QUOTES, 'UTF-8');
    $su_sfx_new
        = htmlentities($_POST['su_sfx'], ENT_QUOTES, 'UTF-8');
    $up_new
        = htmlentities($_POST['up'], ENT_QUOTES, 'UTF-8');
    $up_max_new
        = htmlentities($_POST['up_max'], ENT_QUOTES, 'UTF-8');
    $rm_new
        = htmlentities($_POST['rm'], ENT_QUOTES, 'UTF-8');
    $rm_max_new
        = htmlentities($_POST['rm_max'], ENT_QUOTES, 'UTF-8');
    $tn_new
        = htmlentities($_POST['tn'], ENT_QUOTES, 'UTF-8');
    $type_del
        = htmlentities($_POST['type_del'], ENT_QUOTES, 'UTF-8');
    $type_add
        = htmlentities($_POST['type_add'], ENT_QUOTES, 'UTF-8');

    if (isset($page_new) && $page_new !== "") {
        $page_new = $page_new;
    } else {
        $page_new = $page;
    }

    if (isset($meta_d) && $meta_d_new !== "") {
        $meta_d_new = $meta_d_new;
    } else {
        $meta_d_new = $meta_d;
    }

    if (isset($meta_k_new) && $meta_k_new !== "") {
        $meta_k_new = $meta_k_new;
    } else {
        $meta_k_new = $meta_k;
    }

    if (isset($lang_def_new) && $lang_def_new !== "select") {
        $lang_def_new = $lang_def_new;
    } else {
        $lang_def_new = $lang_def;
    }

    if (isset($css_new) && $css_new !== "") {
        $css_new = 1;
    } else {
        $css_new = 0;
    }
        
    if (isset($css_def_new) && $css_def_new !== "select") {
        $css_def_new = $css_def_new;
    } else {
        $css_def_new = $css_def;
    }

    if (isset($emo_new) && $emo_new !== "") {
        $emo_new = 1;
    } else {
        $emo_new = 0;
    }

    if (isset($char_new) && $char_new !== "") {
        $char_new = $char_new;
    } else {
        $char_new = $char;
    }

    if (isset($rate_new) && $rate_new !== "") {
        $rate_new = $rate_new;
    } else {
        $rate_new = $rate;
    }

    if (isset($rn_max_new) && $rn_max_new !== "") {
        $rn_max_new = $rn_max_new;
    } else {
        $rn_max_new = $rn_max;
    }

    if (isset($rn_min_new) && $rn_min_new !== "") {
        $rn_min_new = $rn_min_new;
    } else {
        $rn_min_new = $rn_min;
    }

    if (isset($log_end_new) && $log_end_new !== "") {
        $log_end_new = 1;
    } else {
        $log_end_new = 0;
    }

    if (isset($log_max_new) && $log_max_new !== "") {
        $log_max_new = $log_max_new;
    } else {
        $log_max_new = $log_max;
    }

    if (isset($log_set_new) && $log_set_new !== "") {
        $log_set_new = 1;
    } else {
        $log_set_new = 0;
    }

    if (isset($su_pfx_new) && $su_pfx !== "") {
        $su_pfx_new = $su_pfx_new;
    } else {
        $su_pfx_new = $su_pfx;
    }

    if (isset($su_sfx_new) && $su_sfx_new !== "") {
        $su_sfx_new = $su_sfx_new;
    } else {
        $su_sfx_new = $su_sfx;
    }

    if (isset($up_new) && $up_new !== "") {
        $up_new = 1;
    } else {
        $up_new = 0;
    }

    if (isset($up_max_new) && $up_max_new !== "") {
        $up_max_new = $up_max_new;
    } else {
        $up_max_new = $up_max;
    }

    if (isset($rm_new) && $rm_new !== "") {
        $rm_new = 1;
    } else {
        $rm_new = 0;
    }

    if (isset($rm_max_new) && $rm_max_new !== "") {
        $rm_max_new = $rm_max_new;
    } else {
        $rm_max_new = $rm_max;
    }

    if (isset($tn_new) && $tn_new !== "") {
        $tn_new = $tn_new;
    } else {
        $tn_new = $tn;
    }

    if (isset($type_del) && $type_del !== "select") {
        $type = array_diff($type, array($type_del));
    }

    if (isset($type_add) && $type_add !== "") {
        $type[] = $type_add;
    }

    $type_new  = implode(",", $type);
    $type_new  = str_replace(",", "','", $type_new);
    $conf_txt .= "\$char=$char_new;\n" .
                 "\$css=$css_new;\n" .
                 "\$css_def=\"$css_def_new\";\n" .
                 "\$emo=$emo_new;\n" .
                 "\$lang_def=\"$lang_def_new\";\n" .
                 "\$log_end=$log_end_new;\n" .
                 "\$log_max=$log_max_new;\n" .
                 "\$log_set=$log_set_new;\n" .
                 "\$meta_d=\"$meta_d_new\";\n" .
                 "\$meta_k=\"$meta_k_new\";\n" .
                 "\$page=\"$page_new\";\n" .
                 "\$rate=$rate_new;\n" .
                 "\$rm=$rm_new;\n" .
                 "\$rm_max=$rm_max_new;\n" .
                 "\$rn_max=$rn_max_new;\n" .
                 "\$rn_min=$rn_min_new;\n" .
                 "\$su_pfx=\"$su_pfx_new\";\n" .
                 "\$su_sfx=\"$su_sfx_new\";\n" .
                 "\$tn=$tn_new;\n" .
                 "\$type=array('$type_new');\n" .
                 "\$up=$up_new;\n" .
                 "\$up_max=$up_max_new;\n";

    file_put_contents($conf_dat, $conf_txt);
    go('CONF_UPDATE');
}

//** Reset log
if (isset($_POST['reset'])) {
    unlink($log_dat);
    file_put_contents($log_dat, $log_init);
    go('LOG_RESET');
}

/**
 ***********************************************************************
 *                                                                POST *
 ***********************************************************************
 */

//** Initial upload state
$pass = 0;

if (isset($_POST['post'])) {
    $name = htmlentities($_POST['name'], ENT_QUOTES, 'UTF-8');
    $text = htmlentities($_POST['text'], ENT_QUOTES, 'UTF-8');

    if ($text !== "") {
        $text = wordwrap($text, 68);
        $pass = 1;

        if ($emo === 1) {
            $emo_open = fopen($emo_dat, 'r');

            while (!feof($emo_open)) {
                $emo_line   = fgets($emo_open);
                $emo_line   = trim($emo_line);
                $emo_larr[] = $emo_line;
            }

            fclose($emo_open);

            foreach ($emo_larr as $item) {
                $emo_line = explode("|", $item);

                if (stripos($text, $emo_line[0]) !== false) {
                    $text = trim(
                        str_replace(
                            $emo_line[0],
                            "<span class=\"emo\">" .
                            $emo_line[1] . "</span>",
                            $text
                        )
                    );
                }
            }

            unset($item);
        }
    }

    if ($up === 1) {

        if (!empty($_FILES['file']['name'])) {
            $up_base = basename($_FILES['file']['name']);
            $up_temp = $_FILES['file']['tmp_name'];
            $up_gimg = getimagesize($_FILES['file']['tmp_name']);
            $up_size = $_FILES['file']['size'];
            $up_file = $up_dir . "/" . $up_base;
            $up_type
                = strtolower(pathinfo($up_file, PATHINFO_EXTENSION));
            $up_rand = mt_rand() . "." . $up_type;
            $up_save = str_replace($up_base, $up_rand, $up_file);
            $up_open = $host . $up_save;

            if ($up_size > $up_max) {
                go('INVALID_FILESIZE');
            } else {

                if (move_uploaded_file(
                    $_FILES['file']['tmp_name'], $up_file
                ) && copy($up_file, $up_save)
                ) {
                    $pass = 1;
                } else {
                    go('WRITE_ERROR');
                }

                unlink($up_file);
            }

            if (in_array($up_type, $b64_type)) {

                if (empty($up_gimg)) {
                    go('INVALID_IMAGE');
                } else {
                    $up_ico = "tn_" . basename($up_save);
                    copy($up_save, $up_ico);

                    if ($up_type === "jpeg" || $up_type === "jpg") {
                        $up_src = imagecreatefromjpeg($up_ico);
                    } elseif ($up_type === "png") {
                        $up_src = imagecreatefrompng($up_ico);
                    } else {
                        $up_src = imagecreatefromgif($up_ico);
                    }

                    $up_iw = imagesx($up_src);
                    $up_ih = imagesy($up_src);
                    $up_wh = min($tn / $up_iw, $tn / $up_ih);
                    $up_tw = ceil($up_wh * $up_iw);
                    $up_th = ceil($up_wh * $up_ih);
                    $up_tn = imagecreatetruecolor($up_tw, $up_th);

                    imagecopyresampled(
                        $up_tn, $up_src,
                        0, 0, 0, 0,
                        $up_tw, $up_th, $up_iw, $up_ih
                    );

                    if ($up_type === "jpeg" || $up_type === "jpg") {
                        imagejpeg($up_tn, $up_ico, 60);
                    } elseif ($up_type === "png") {
                        imagepng($up_ico);
                    } else {
                        imagegif($up_ico);
                    }

                    $up_link = "<br/><a href=\"$up_open\" " .
                               "title=\"" . $lang['up_open'] .
                               "\"><img src=" .
                               chunk_split(b64enc($up_ico), 68) .
                               "width=\"$up_tw\" height=\"$up_th\" " .
                               "alt=\"\"/></a>";

                    imagedestroy($up_src);
                    imagedestroy($up_tn);
                    unlink($up_ico);
                }
            } elseif (in_array($up_type, $type)) {
                $up_link = "<a href=\"$up_open\" " .
                           "title=\"" . $lang['up_open'] . "\">" .
                           basename($up_save) . "</a>";
            } else {
                go('INVALID_FILETYPE');
            }
        }
    }

    if ($text !== "" && $up_link === "") {
        $post = $text;
    } elseif ($text !== "" && $up_link !== "") {
        $post = $text . " " . $up_link;
    } elseif ($text === "" && $up_link !== "") {
        $post = $up_link;
    } else {
        $pass = 0;
    }

    if ($pass === 1) {
        $post  = "<div class=\"item\">\n" .
                 "    <div class=\"item_head\">\n" .
                 "        <span class=\"item_date\">$date</span> \n" .
                 "        <span class=\"item_name\">" .
                 $_SESSION['ac_name'] . "</span>\n" .
                 "    </div>\n" .
                 "    <pre class=\"item_text\">\n" .
                 "$post\n" .
                 "    </pre>\n" .
                 "</div>\n" .
                 "<hr/>\n";

        $post .= file_get_contents($log_dat);
        file_put_contents($log_dat, $post);
        $_SESSION['ac_post'] = time();
        go('POST');
    } else {
        go('EMPTY_POST');
    }
}

/**
 ***********************************************************************
 *                                                               LOGIN *
 ***********************************************************************
 */

if (isset($_POST['login'])) {
    $name      = htmlentities($_POST['name'], ENT_QUOTES, 'UTF-8');
    $cook_perm = htmlentities($_POST['cook_perm'], ENT_QUOTES, 'UTF-8');

    if (!empty($cook_perm)) {
        $cook_perm = 1;
    } else {
        $cook_perm = 0;
    }

    if ($name === "") {
        go('MISSING_NAME');
    } else {

        if ($name === $su) {
            $_SESSION['ac_name'] = $su_pfx;
        } else {
            $_SESSION['ac_name']
                = $name . "_" . mt_rand($rn_min, $rn_max);
        }

        $text = "<div class=\"item_log\">$date " .
                $_SESSION['ac_name'] . " LOGIN</div>\n";

        if (is_file($log_dat)) {
            $text .= file_get_contents($log_dat);
        }

        file_put_contents($log_dat, $text);

        if (!isset($_COOKIE['ac_cook'])) {

            if ($cook_perm === 1) {
                setcookie('ac_cook', 'accept', $cook_time, '/');

                if (count($_COOKIE) > 0) {
                    setcookie('ac_lang', $lang_def, $cook_time, '/');
                    setcookie('ac_css', $css_def, $cook_time, '/');
                    $_SESSION['ac_lang'] = $_COOKIE['ac_lang'];
                    $_SESSION['ac_css']  = $_COOKIE['ac_css'];
                }
            } else {
                $_SESSION['ac_lang'] = $lang_def;
                $_SESSION['ac_css']  = $css_def;
            }
        }

        go('LOGIN');
    }
}

/**
 ***********************************************************************
 *                                                              LOGOUT *
 ***********************************************************************
 */

$stat = 1;

if (isset($_SESSION['ac_post'])
    && time() - $_SESSION['ac_post'] >= 60 * $out
) {
    $exit = "LOGOUT_INACTIVE";
} elseif (isset($_POST['quit'])) {
    $exit = "LOGOUT";
} else {
    $stat = 0;
}

if ($stat === 1) {
    $text  = "<div class=\"item_log\">$date " .
             $_SESSION['ac_name'] . " $exit</div>\n";
    $text .= file_get_contents($log_dat);
    file_put_contents($log_dat, $text);
    $_SESSION = array();

    if (ini_get("session.use_cookies")) {
        $para = session_get_cookie_params();
        setcookie(
            session_name(), '', time() - 42000,
            $para["path"], $para["domain"],
            $para["secure"], $para["httponly"]
        );
    }

    if (session_status() === PHP_SESSION_ACTIVE) {
        session_destroy();
    }

    go($exit);
}

/**
 ***********************************************************************
 *                                                        BEGIN MARKUP *
 ***********************************************************************
 */

echo "<!DOCTYPE html>\n" .
     "<html lang=\"$lang_mime\">\n" .
     "    <head>\n" .
     "        <title>$page</title>\n" .
     "        <meta charset=\"UTF-8\"/>\n" .
     "        <meta name=\"language\" content=\"$lang_mime\"/>\n" .
     "        <meta name=\"description\" " .
     "content=\"$meta_d - PHP Atomchat free PHP chat scripts\"/>\n" .
     "        <meta name=\"keywords\" " .
     "content=\"$meta_k,PHP Atomchat,free PHP chat scripts\"/>\n" .
     "        <meta name=\"robots\" content=\"noodp, noydir\"/>\n" .
     "        <meta name=\"viewport\" content=\"width=device-width, " .
     "height=device-height, initial-scale=1\"/>\n" .
     "        <link rel=\"icon\" href=\"" . $host . "favicon.png\" " .
     "type=\"image/png\"/>\n" .
     "        <link rel=\"stylesheet\" " .
     "href=\"" . $host. "default.css\"/>\n" .
     "        <link rel=\"stylesheet\" href=\"$host$css_dat\"/>\n" .
     "    </head>\n" .
     "    <body>\n" .
     "        <form action=\"$host#CHAT\" name=\"chat\" " .
     "method=\"POST\" accept-charset=\"UTF-8\" " .
     "enctype=\"multipart/form-data\">\n";

/**
 ***********************************************************************
 *                                                             CHATLOG *
 ***********************************************************************
 */

if (isset($_SESSION['ac_name']) && !empty($_SESSION['ac_name'])) {

    //** Character counter
    echo "            <nav class=\"block\">\n" .
         "                <div class=\"s\">\n" .
         "                    " . $lang['text'] . " <input " .
         "id=\"txta\" size=\"4\" value=\"$char\" disabled />\n" .
         "                </div>\n" .

    //** Text
         "                <textarea name=\"text\" id=\"text\" " .
         "rows=\"2\" cols=\"45\" maxlength=\"$char\" " .
         "title=\"" . $lang['text_tip'] . "\" " .
         "onkeydown=\"chars(this.form);\" " .
         "onkeypress=\"chars(this.form);\" " .
         "onkeyup=\"chars(this.form);\">";

    if (!empty($_POST['text'])) {
        $text_tmp = $_POST['text'];
    }

    if (isset($text_tmp)) {
        echo $text_tmp;
    }

    echo "</textarea>\n" .

    //** Emoji
         "                <div id=\"mo\">\n" .
         "                    <span class=\"emo\">&#x1F60A;</span> " .
         $lang['emo_sel'] . "\n" .
         "                    <div id=\"mo_list\">\n";

    $emo_open = fopen($emo_dat, 'r');

    while (!feof($emo_open)) {
        $emo_line   = fgets($emo_open);
        $emo_line   = trim($emo_line);
        $emo_larr[] = $emo_line;
    }

    fclose($emo_open);

    foreach ($emo_larr as $item) {

        if ($item !== "") {
            $emo_line = explode("|", $item);
            $emo_id   = str_replace("&#x", "", $emo_line[1]);
            $emo_id   = str_replace(";", "", $emo_id);
            $emo_id   = "emo_$emo_id";
            echo "<input id=\"$emo_id\" type=\"text\" " .
                 "class=\"emo_id\" value=\"$emo_line[1]\" " .
                 "title=\"" . $emo_line[0] . "\" " .
                 "onclick=\"emo('text', '$emo_id');\"/>\n";
        }
    }

    unset($item);
    echo "                    </div>\n" .
         "                </div>\n" .
         "                <div>\n" .

    //** Name -- hidden session token
         "                    <input type=\"hidden\" name=\"name\" " .
         "value=\"" . $_SESSION['ac_name'] . "\"/>\n";

    //** Super user
    if ($_SESSION['ac_name'] === $su_pfx) {
        echo "                    <input type=\"submit\" " .
             "name=\"su\" id=\"su\" value=\"=\" " .
             "title=\"" . $lang['su_open'] . "\"/>\n";
    }

    //** Quit
    echo "                    <input type=\"submit\" name=\"quit\" " .
         "id=\"quit\" value=\"x\" " .
         "title=\"" . $lang['quit'] . "\"/>\n" .

    //** Save
         "                    <input type=\"submit\" name=\"save\" " .
         "id=\"save\" value=\"v\" " .
         "title=\"" . $lang['save'] . "\"/>\n" .

    //** Conf
         "                    <input type=\"submit\" name=\"conf\" " .
         "id=\"conf\" value=\"?\" " .
         "title=\"" . $lang['conf_tip'] . "\"/>\n" .

    //** Post
         "                    <input type=\"submit\" name=\"post\" " .
         "id=\"post\" value=\"&gt;\" " .
         "title=\"" . $lang['post'] . "\"/>\n" .
         "                </div>\n";

    //** Upload
    if ($up === 1) {
        echo "                <div>\n" .
             "                    <input type=\"file\" name=\"file\" " .
             "id=\"file\" title=\"" . $lang['up_sel'] . "\"/>\n" .
             "                    <div class=\"s\">" .
             $lang['max'] . " $up_max</div>\n" .
             "                </div>\n";
    }

    //** Link
    echo "                <div id=\"by\">\n" .
         "                    <span></span><span></span>" .
         "<span></span>&nbsp;<a href=" .
         "\"https://github.com/phhpro/atomchat\" " .
         "title=\"" . $lang['get'] . "\">PHP Atomchat v$ver</a>\n" .
         "                </div>\n" .
         "            </nav>\n" .
         "            <article class=\"block\" id=\"push\">\n";

    if (is_file($log_dat)) {
        include $log_dat;
    } else {
        file_put_contents($log_dat, $log_init);
        include $log_dat;
    }

    echo "            </article>\n";

    /**
     *******************************************************************
     *                                                        SETTINGS *
     *******************************************************************
     */

    if (isset($_POST['conf'])) {
        echo "            <article class=\"block\" id=\"settings\">\n" .
             "                <h1>" . $lang['conf'] . "</h1>\n" .

        //** Language
             "                <p>\n" .
             "                    <label for=\"lang_id\">" .
             $lang['lang'] . "</label>\n" .
             "                    <select name=\"lang_id\" " .
             "title=\"" . $lang['lang_tip']. "\">\n";

        foreach ($lang_ls as $item) {
            $lang_file = file_get_contents($item);
            $lang_line = file($item);
            $lang_name = $lang_line[16];
            $lang_name = str_replace(
                "\$lang['__name__']   = \"", "", $lang_name
            );
            $lang_name = str_replace("\";\n", "", $lang_name);
            $lang_text = $lang_line[17];
            $lang_text = str_replace(
                "\$lang['__text__']   = \"", "", $lang_text
            );
            $lang_text = str_replace("\";\n", "", $lang_text);
            $lang_link = basename($item);
            $lang_link = str_replace(".php", "", $lang_link);
            echo "                        <option " .
                 "value=\"$lang_link\" lang=\"$lang_link\" " .
                 "title=\"$lang_text\">$lang_name</option>\n";
        }

        unset($item);
        echo "                    </select>\n" .
             "                    <input type=\"submit\" " .
             "name=\"lang_apply\" value=\"&gt;\" " .
             "title=\"" . $lang['apply'] . "\"/>\n" .
             "                </p>\n";

        //** Theme
        if ($css === 1) {
            echo "                <p>\n" .
                 "                    <label for=\"css_id\">" .
                 $lang['theme'] . "</label>\n" .
                 "                    <select name=\"css_id\" " .
                 "title=\"" . $lang['theme_tip'] . "\">\n";

            foreach ($css_ls as $item) {
                $css_link = basename($item);
                $css_link = str_replace(".css", "", $css_link);
                $css_text
                    = str_replace(array("-", "_"), " ", $css_link);
                echo "                        <option " .
                     "value=\"$css_link\" " .
                     "title=\"" . $lang['theme_tip'] . " " .
                     ucwords($css_text) . "\">" . ucwords($css_text);

                if (isset($_COOKIE['ac_css'])
                    && $css_link === $_COOKIE['ac_css']
                ) {
                    echo " [x]";
                } elseif ($css_link === $_SESSION['ac_css']) {
                    echo " [x]";
                } else {
                    //** No cookie, no session -- skip
                }

                echo "</option>\n";
            }

            unset($item);
            echo "                    </select>\n" .
                 "                    <input type=\"submit\" " .
                 "name=\"css_apply\" value=\"&gt;\" " .
                 "title=\"" . $lang['apply'] . "\"/>\n" .
                 "                </p>\n";
        }

        //** Emoji
        if ($emo === 1) {
            $emo_open = fopen($emo_dat, 'r');

            while (!feof($emo_open)) {
                $emo_line   = fgets($emo_open);
                $emo_line   = trim($emo_line);
                $emo_larr[] = $emo_line;
            }

            fclose($emo_open);
            echo "                <h2>" . $lang['emo'] . "</h2>\n" .
                 "                <p>" . $lang['emo_txt'] . "</p>\n" .
                 "                <p class=\"emo\">";

            foreach ($emo_larr as $item) {
     
                if ($item !== "") { 
                    $emo_line = explode("|", $item);
                    echo "<span class=\"glue\">" . $emo_line[0] .
                         "&nbsp;" . $emo_line[1] . "</span> ";
                }
            }

            unset($item);
            echo "                </p>\n";
        }

        //** Type
        if ($up === 1) {
            echo "                <h2>" . $lang['type'] . "</h2>\n" .
                 "                <p>\n";

            //** Internal
            foreach ($b64_type as $item) {
                echo "$item ";
            }

            unset($item);

            //** User
            foreach ($type as $item) {
                echo "$item ";
            }

            unset($item);
            echo "                </p>\n" .
                 "                <p>" . $lang['max'] .
                 " $up_max</p>\n";

        }

        //** Credits
        if (is_file($cr_dat)) {
            $cr_open = fopen($cr_dat, 'r');

            while (!feof($cr_open)) {
                $cr_lget = fgets($cr_open);
                $cr_lget = trim($cr_lget);
                $cr_ln[] = $cr_lget;
            }

            fclose($cr_open);
            echo "                <h2>" . $lang['cr'] . "</2>\n" .
                 "                <ul>\n";

            foreach ($cr_ln as $item) {

                if ($item !== "") { 
                    $cr_ln = explode("|", $item);

                    echo "                    <li>" .
                         $cr_ln[0] . "\n" .
                         "                        <ul>\n" .
                         "                            <li>" .
                         $cr_ln[1] . "</li>\n" .
                         "                        </ul>\n" .
                         "                    </li>\n";
                }
            }

            unset($item);
            echo "                </ul>\n";
        }

        echo "                <p id=\"nav\">\n" .
             "                    <input type=\"submit\" " .
             "id=\"close\" value=\"x\" " .
             "title=\"" . $lang['close'] . "\"/>\n" .
             "                </p>\n" .
             "            </article>\n";
    } elseif (isset($_POST['su'])) {

        /**
         ***************************************************************
         *                                                  SUPER USER *
         ***************************************************************
         */

        echo "            <article class=\"block\" id=\"super\">\n" .
             "                <h1>" . $lang['su'] . "</h1>\n" .

        //** Page title
             "                <p>\n" .
             "                    <label for=\"page\">" .
             $lang['page'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"page\" id=\"page\" value=\"$page\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** META description
             "                <p>\n" .
             "                    <label for=\"meta_d\">" .
             $lang['meta_d'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"meta_d\" id=\"meta_d\" value=\"$meta_d\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** META keywords
             "                <p>\n" .
             "                    <label for=\"meta_k\">" .
             $lang['meta_k'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"meta_k\" id=\"meta_k\" value=\"$meta_k\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Language default
             "                <p>\n" .
             "                    <label for=\"lang_def\">" .
             $lang['lang_def'] . "</label>\n" .
             "                    <span>" . $lang['current'] . " " .
             "$lang_def</span> \n" .
             "                    <select name=\"lang_def\" " .
             "id=\"lang_def\" title=\"" . $lang['sel_tip'] . "\">\n" .
             "                        <option value=\"select\" " .
             "title=\"" . $lang['sel_tip'] . "\">" .
             $lang['sel'] . "</option>\n";

        foreach ($lang_ls as $item) {
            $lang_link = basename($item);
            $lang_link = str_replace(".php", "", $lang_link);
            echo "                        <option value=" .
                 "\"$lang_link\" title=\"" . $lang['sel_tip'] .
                 "\">$lang_link</option>\n";
        }

        unset($item);
        echo "                    </select>\n" .
                  "                </p>\n" .

        //** Theme multi
             "                <p>\n" .
             "                    <label for=\"css\">" .
             $lang['css'] . "</label>\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"css\" id=\"css\" title=\"" . $lang['tick'] . "\"";

        if ($css === 1) {
            echo " checked ";
        }

        echo "/>\n" .
             "                </p>\n" .

        //** Theme default
             "                <p>\n" .
             "                    <label for=\"css_def\">" .
             $lang['css_def'] . "</label>\n" .
             "                    <span>" . $lang['current'] . " " .
             "$css_def</span> \n" .
             "                    <select name=\"css_def\" " .
             "id=\"css_def\" title=\"" . $lang['sel_tip'] . "\">\n" .
             "                        <option value=\"select\" " .
             "title=\"" . $lang['sel_tip'] . "\">" .
             $lang['sel'] . "</option>\n";

        foreach ($css_ls as $item) {
            $css_link = basename($item);
            $css_link = str_replace(".css", "", $css_link);
            echo "                        <option value=\"" .
                 "$css_link\" title=\"" . $lang['sel_tip'] . "\">" .
                 "$css_link</option>\n";
        }

        unset($item);
        echo "                    </select>\n" .
             "                </p>\n" .

        //** Emoji
             "                <p>\n" .
             "                    <label for=\"emo\">" .
             $lang['emo'] . "</label>\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"emo\" id=\"emo\" title=\"" . $lang['tick'] . "\"";

        if ($emo === 1) {
            echo " checked ";
        }

        echo "/>\n" .
             "                </p>\n" .

        //** Characters
             "                <p>\n" .
             "                    <label for=\"char\">" .
             $lang['char'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"char\" id=\"char\" value=\"$char\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Rate
             "                <p>\n" .
             "                    <label for=\"rate\">" .
             $lang['rate'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"rate\" id=\"rate\" value=\"$rate\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Random min
             "                <p>\n" .
             "                    <label for=\"rn_min\">" .
             $lang['rn_min'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"rn_min\" id=\"rn_min\" value=\"$rn_min\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Random max
             "                <p>\n" .
             "                    <label for=\"rn_max\">" .
             $lang['rn_max'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"rn_max\" id=\"rn_max\" value=\"$rn_max\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Endless log
             "                <p>\n" .
             "                    <label for=\"log_end\">" .
             $lang['log_end'] . "</label>\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"log_end\" id=\"log_end\" " .
             "title=\"" . $lang['tick'] . "\"";

        if ($log_end === 1) {
            echo " checked ";
        }

        echo "/>\n" .
             "                </p>\n" .

        //** Log max
             "                <p>\n" .
             "                    <label for=\"log_max\">" .
             $lang['max'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"log_max\" id=\"log_max\" value=\"" .
             "$log_max\" title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Log auto-reset
             "                <p>\n" .
             "                    <label for=\"log_set\">" .
             $lang['log_set'] . "</label>\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"log_set\" id=\"log_set\" " .
             "title=\"" . $lang['tick'] . "\"";

        if ($log_set === 1) {
            echo " checked ";
        }

        echo "/>\n" .
             "                </p>\n" .

        //** SU prefix
             "                <p>\n" .
             "                    <label for=\"su_pfx\">" .
             $lang['su_pfx'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"su_pfx\" id=\"su_pfx\" value=\"$su_pfx\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** SU suffix
             "                <p>\n" .
             "                    <label for=\"su_sfx\">" .
             $lang['su_sfx'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"su_sfx\" id=\"su_sfx\" value=\"$su_sfx\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Uploads
             "                <p>\n" .
             "                    <label for=\"up\">" .
             $lang['up'] . "</label>\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"up\" id=\"up\" title=\"" . $lang['tick'] . "\"";

        if ($up === 1) {
            echo " checked ";
        }

        echo "/>\n" .
             "                </p>\n" .

        //** Upload max
             "                <p>\n" .
             "                    <label for=\"up_max\">" .
             $lang['max'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"up_max\" id=\"up_max\" value=\"$up_max\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Auto-delete old files
             "                <p>\n" .
             "                    <label for=\"rm\">" .
             $lang['rm'] . "</label>\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"rm\" id=\"rm\" " .
             "title=\"" . $lang['tick'] . "\"";

        if ($rm === 1) {
            echo " checked ";
        }

        echo "/>\n" .
             "                </p>\n" .

        //** Days to keep files
             "                <p>\n" .
             "                    <label for=\"rm_max\">" .
             $lang['rm_max'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"rm_max\" id=\"rm_max\" value=\"$rm_max\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Thumbnail
             "                <p>\n" .
             "                    <label for=\"tn\">" .
             $lang['tn'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"tn\" id=\"tn\" value=\"$tn\" " .
             "title=\"" . $lang['edit'] . "\"/>\n" .
             "                </p>\n" .

        //** Type delete
             "                <p>\n" .
             "                    <label for=\"type_del\">" .
             $lang['type_del'] . "</label>\n" .
             "                    <select " .
             "name=\"type_del\" id=\"type_del\" " .
             "title=\"" . $lang['sel_tip'] . "\">\n" .
             "                        <option value=\"select\" " .
             "title=\"" . $lang['sel_tip'] . "\">" .
             $lang['sel'] . "</option>\n";

        foreach ($type as $item) {
            echo "                        <option " .
                 "value=\"$item\" title=\"" .
                 $lang['sel_del'] . "\">$item</option>\n";
        }

        unset($item);
        echo "                    </select>\n" .
             "                </p>\n" .

        //** Type add
             "                <p>\n" .
             "                    <label for=\"type_add\">" .
             $lang['type_add'] . "</label>\n" .
             "                    <input type=\"text\" " .
             "name=\"type_add\" id=\"type_add\" " .
             "title=\"" . $lang['type_add_t'] . "\"/>\n" .
             "                </p>\n" .

        //** Post
             "                <p id=\"nav\">\n" .
             "                    <input type=\"submit\" " .
             "id=\"close\" value=\"x\" " .
             "title=\"" . $lang['close'] . "\"/>\n";

        if (is_file($log_dat)) {
            echo "                    <input type=\"submit\" " .
                 "name=\"reset\" id=\"reset\" value=\"0\" " .
                 "title=\"" . $lang['reset'] . "\"/>\n";
        }

        echo "                    <input type=\"submit\" " .
             "name=\"update\" id=\"update\" value=\"&gt;\" " .
             "title=\"" . $lang['update'] . "\"/>\n" .
             "                </p>\n" .
             "            </article>\n";
    }
} else {

    /**
    ********************************************************************
    *                                                            LOGIN *
    ********************************************************************
    */

    echo "            <article class=\"block\" id=\"login\">\n" .
         "                <h1>" . $lang['welcome'] . "</h1>\n";

    //** Cookie
    if (!isset($_COOKIE['ac_cook'])) {
        echo "                <h2>" . $lang['cook_perm'] . "</h2>\n" .
             "                <p>\n" .
             "                    " . $lang['cook_ask'] . "\n" .
             "                    <input type=\"checkbox\" " .
             "name=\"cook_perm\" id=\"cook_perm\" " .
             "title=\"" . $lang['cook_tip'] . "\"/> \n" .
             "                </p>\n" .
             "                <p>" . $lang['cook_del'] . "</p>\n";
    }

    //** Info
    echo "                <p>" . $lang['name_txt'] . "</p>\n" .
         "                <noscript>\n" .
         "                    <h2>" . $lang['js'] . "</h2>\n" .
         "                    <p>" . $lang['js_txt'] . "</p>\n" .
         "                </noscript>\n" .
         "            </article>\n" .
         "            <nav class=\"block\">\n" .
         "                <div>\n" .

    //** Name
         "                    <label for=\"name\">" .
         $lang['name'] . "</label>\n" .
         "                    <input type=\"text\" name=\"name\" " .
         "id=\"name\" maxlength=\"16\" " .
         "title=\"" . $lang['name_tip'] . "\"/> \n" .

    //** Login
         "                    <input type=\"submit\" name=\"login\" " .
         "value=\"&gt;\" title=\"" . $lang['login'] . "\"/>\n" .
         "                </div>\n" .
         "            </nav>\n";
}

/**
 ***********************************************************************
 *                                                          END MARKUP *
 ***********************************************************************
 */

echo "        </form>\n" .
     "        <script>\n" .
     "            var char = $char;\n" .
     "            var rate = $rate;\n" .
     "            var data = \"$log_dat\";\n" .
     "        </script>\n" .
     "        <script src=\"chat.js\"></script>\n" .
     "    </body>\n" .
     "</html>\n";

/**
 ***********************************************************************
 *                                                          DELETE OLD *
 ***********************************************************************
 */

if ($rm === 1) {
    $rm_max = $rm_max * 24 * 60 * 60;

    foreach (new DirectoryIterator($up_dir) as $item) {

        if ($item -> isDot()) {
            continue;
        }

        if ($item -> isFile()
            && time() - $item -> getMTime() >= $rm_max
        ) {
            unlink($item -> getRealPath());
        }
    }

    unset($item);
}

//** Lulu time
ob_flush();
flush();
